# java를 통한 데이터베이스 서버 연결
1. 소프트웨어를 사용하는 사용자에 의해 입력된 데이터는 필요에 따라 
	DB라는 고정적이고 지속적인 저장장치에 저장되었다가, 필요에 따라 활용하여 내가 원하는 정보를 가져올 수 있다.
2. 이 때, 이용자와 서버 사이에 보다 효율적인 사요앚 정의 인터페이스가 있다면 원하는 정보를 빠르게 로딩할 수 있다.
3. 이와 같이 데이터베이스 서버에서 소프트웨어(자바)에 의해 DB 접속과 기능에 따라 조회,등록,수정,삭제 등을 하는 작업은 중요한 개발 작업 중에 하나이다.
4. DB 연결을 위한 진행단계
	1) 개발환경
		- jdbc 드라이버 확보
			DB연결을 위해 공통적인 부분을 드라이버 jar로 클래스로 만들어서 처리
			코드(jdbc드라이버)이외에 개발자가 반드시 코딩.
			C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
			- eclipse에서 해당 lib를 실행 시 인식할 
			
		- oracle db서버 설치
			서버 정보
			host(ip) : localhost(서버를 현재 같은 컴퓨터에서 호출시)
			port: 1521
			database : xe- 데이터베이스 서버 단위 식별자
			username: scott
			password: tiger
			
	2) java 코드처리 단계(ps. 휴대폰에 타인과 대화를 생각)
		아래 단계는 위 단계를 처리한 기반으로 하위 내용을 처리한다.
		- jdbc 메모리 로딩하기
		- 예외 처리
		- 연결자원(객체) 설정 - 전화번호를 입력해서 연결 - 서버정보를 입력해서 특정 서버에 연결
		
		- 대화 객체 설정 - 말을 하기도 하고, 전달받기도 하는 (SQL)
		- 대화의 결과를 가져오는 객체 설정 
			select => 명령/데이터 전달 => 답을 가져오기도 한다.
			Resultset
		- 대화 객체의 내용을 VO객체에 할당 및 리턴
			Resultset => VO
		- 자원해제
		- 기타 예외 처리
	3) 자바에서 DB접속을 위한 핵심 내장 객체
		- java.sql.* => import java.sql.*;
		- Connection : 연결객체
		- Statement : 대화객체
			PreparedStatement : 준비된 대화 객체
		- ResultSet: 서버에서 온 데이터를 저장
		