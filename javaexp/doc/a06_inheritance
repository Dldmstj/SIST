	# 상속처리
	1. 상속이란?
		1) 현실세계
			부모가 자식에게 물려주는 행위
			부모가 자식을 선택해서 물려줌
		2) 객체 지향 프로그램
			자식(하위, 파생) 클래스가 부모(상위)클래스의 멤버를 물려받는 것
			자식이 부모를 선택해서 물려받는 것
			상속 대상 : 부모의 필드와 메소드, 생성자(super()로 호출 가능)
	2. 상속 개념의 활용
		1) 상속의 효과
			부모 클래스 재사용으로 자식 클래스를 빨리 개발 가능
			반복된 코드 (중복)을 줄임
			유지 보수 편리성 제공 : 추상/인터페이스 활용시 기존 소스에 영향을 끼치지 않으면서 추가 개발의 효율을 더할 수 있다.
			객체 다형성 구현 가능
		2) 상속 대상 제한
			부모 클래스의 private 접근 갖는 필드와 메소드 제외
			부모 클래스가 다른 패키지에 있을 경우, default 접근 갖는 필드와 메소드 제외
			
	3. 상속 처리 기본 형식
		class 상위 클래스 {
			필드
			생성자() {}
			메서드
		}
		class 하위 클래스 extends 상위 클래스{
			// 상위 클래스가 가지고 있는 멤버들이 선언된 것과 동일하다.
		}
	4. 상속에서 특별한 접근 제어자 protected
		1) 일반적인 클래스 상속의 범위에서 +특정한 경우에 처리될 수 있게 처리함
		2) 접근제어자
			privated : 외부클래스 접근 불가
			x : 패키지가 같은 클래스, 그 멤버에서 접근 가능
			protected: 상속 관계에 있는 클래스의 멤버"만" 외부 패키지에서도 접근 가능
			public: 외부 패키지의 클래스와 멤버에서도 사용 가능