package javaexp.a01_begin;

public class A08_Var {

	public static void main(String[] args) {
		/*
		 # 변수의 명명규칙 (필수)
		 1. 첫번째 글자는 문자이어야 한다. -> 숫자로 시작하면 에러 발생
		 2. 특수문자는 $ , _ 만 허용된다. 그 외는 에러 발생
		 3. 대소문자를 구분하여, 같은 글자라도 대소문자가 다르면 다른 변수로 인식. (동일한 변수 명으로 선언하지 못함)
		 	-> 선언할 때만 동일한 변수를 선언하지 못하지, 할당은 재할당되는 것이므로 동일한 변수로 사용할 수 있다.
		 4. 내장된 예약어는 변수로 사용할 수 없다.
		 	ex) for, if, break, while 등의 명령처리시 사용되는 예약어
		*/
		
		int num01 = 5;		// 0num (x)
		String $str = "hello";
		String _str = "Hello";		// #str (x)
		int Num01 = 6;
		
		var num02 = 70;		// int num02(x)
//		var은 초기에 데이터에 따라 형이 정해지는 것을 말함.
		num02 = 80;		// 선언된 내용 재할당 가능
//		num02 = "hello!";		// (x) 다른 데이터 유형으로 재할당 불가능 (프로그램마다 다름)
								//	ps) script성 프로그래밍에서는 다른 데이터 할당 가능.
//		int for = 1234;			// (x) 변수 명으로 예약어 사용 불가
		
		/*
		 # 변수의 가독성을 위해 지켜야할 원칙 (에러가 발생하지는 않음)
		 1. 변수는 한글이 아닌 영문으로 선언하여 사용.
		 2. 변수를 사용할 때, 의미있는 변수를 사용.
		 	-> 짧은 코드에서 간단하게 테스트용으로 사용할 때는 i,j,k 등을 사용할 수 있지만,
		 		실무 프로그램에서 전역적인 변수를 사용할 때는 신중하게 의미있는 변수를 사용
		 		ex) breakCount, accountPay 등 해당 변수를 보았을 때, 어떤 목적에 의해 사용되는 지를 구분하도록 선언
		 3. 변수의 유형에 따른 구분
		 	1) 클래스 명은 반드시 대문자로 시작
		 		-> !주의! 클래스를 통한 참조변수(heap 영역의 주소를 참조)는 소문자로 선언.
		 		class Person {} ==> Person p01 (o), Person P01 (x)
		 		
		 	2) 일반 변수명/메서드명은 소문자로 시작
		 		cf) 메서드란 클래스 하위에 기능을 수행해주는 함수
		 	3) 변수명에 중첩적인 의미가 있을 때 _, 대문자로 구분하여 선언
		 		ex) setage -> setAge
		 			transpay -> transPay, trans_pay
		 */
		
		int 숫자1 = 30;		// (△)
		
	}

}
